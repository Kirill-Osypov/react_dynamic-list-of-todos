{"version":3,"sources":["components/TodoList/TodoList.jsx","api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["options","TodoList","state","search","typeFilter","isShuffle","static","propTypes","todos","PropTypes","arrayOf","object","isRequired","userSelected","func","selectedUserId","number","handleChange","e","target","name","value","setState","handleRandomize","this","props","visibleTodos","filter","todo","completed","sort","Math","random","title","toLowerCase","includes","className","type","placeholder","onChange","map","option","key","onClick","id","classNames","checked","readOnly","userId","Component","request","url","fetch","then","response","json","CurrentUser","user","loadUser","prevProps","data","email","phone","clear","App","React","ReactDOM","render","document","getElementById"],"mappings":"oZAKMA,EAAU,CAAC,MAAO,SAAU,aAErBC,EAAb,4MACEC,MAAQ,CACNC,OAAQ,GACRC,WAAY,MACZC,WAAW,GAJf,EAOEC,OAAS,CACPC,UAAW,CACTC,MAAOC,IAAUC,QAAQD,IAAUE,QAAQC,WAC3CC,aAAcJ,IAAUK,KAAKF,WAC7BG,eAAgBN,IAAUO,OAAOJ,aAXvC,EAeEK,aAAe,SAACC,GACd,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,EAAKC,SAAL,eAAiBF,EAAOC,KAlB5B,EAqBEE,gBAAkB,WAChB,EAAKD,UAAS,SAAApB,GAAK,MAAK,CAAEG,WAAYH,EAAMG,eAtBhD,4CAyBE,WACE,MAAgDmB,KAAKC,MAA7CjB,EAAR,EAAQA,MAAOK,EAAf,EAAeA,aAAcE,EAA7B,EAA6BA,eAC7B,EAA0CS,KAAKtB,MAAvCC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,WAAYC,EAA5B,EAA4BA,UACxBqB,EAAY,YAAOlB,GAmBvB,OAjBAkB,EAAelB,EAAMmB,QAAO,SAAAC,GAAI,MAEd,WAAfxB,GACIwB,EAAKC,UACU,cAAfzB,EACCwB,EAAKC,UACLD,KAGJvB,GACFqB,EAAaI,MAAK,kBAAMC,KAAKC,SAAW,MAG1CN,EAAeA,EAAaC,QAC1B,SAAAC,GAAI,OAAIA,EAAKK,MAAMC,cAAcC,SAAShC,EAAO+B,kBAIjD,yBAAKE,UAAU,YACb,0BAAMA,UAAU,eACd,2BACEhB,KAAK,SACLiB,KAAK,OACLD,UAAU,qBACVE,YAAY,YACZjB,MAAOlB,EACPoC,SAAUf,KAAKP,eAGjB,4BACEG,KAAK,aACLgB,UAAU,sBACVf,MAAOjB,EACPmC,SAAUf,KAAKP,cAEdjB,EAAQwC,KAAI,SAAAC,GAAM,OACjB,4BACEC,IAAKD,EACLpB,MAAOoB,GAENA,OAKP,4BACEJ,KAAK,SACLD,UAAU,YACVO,QAASnB,KAAKD,iBAHhB,cAUF,sCAEA,yBAAKa,UAAU,4BACb,wBAAIA,UAAU,kBACXV,EAAac,KAAI,SAAAZ,GAAI,OACpB,wBACEc,IAAKd,EAAKgB,GACVR,UAAWS,IAAW,iBAAkB,CACtC,0BAA2BjB,EAAKC,UAChC,6BAA8BD,EAAKC,aAGrC,+BACE,2BACEQ,KAAK,WACLS,QAASlB,EAAKC,UACdkB,UAAQ,IAEV,2BAAInB,EAAKK,QAGX,4BACEI,KAAK,SACLD,UAAWS,IACT,wBACA,SACA,CACE,kCACAjB,EAAKoB,SAAWjC,IAGpB4B,QAAS,kBAAM9B,EAAae,EAAKoB,UAVnC,gBAYYpB,EAAKoB,oBAtHjC,GAA8BC,aCLxBC,G,MAAU,SAAAC,GAAG,OAAIC,MAAM,GAAD,OAFX,kCAEW,OAAeD,IACxCE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,YCGhBC,EAAb,4MACEtD,MAAQ,CACNuD,KAAM,IAFV,uDAKE,WACEjC,KAAKkC,aANT,gCASE,SAAmBC,GACbA,EAAUX,SAAWxB,KAAKC,MAAMuB,QAClCxB,KAAKkC,aAXX,sBAeE,WAAY,IDbSV,ECaV,QDbUA,ECcXxB,KAAKC,MAAMuB,ODdUE,EAAQ,UAAD,OAAWF,IAChDK,MAAK,SAAAI,GAAI,OAAIA,EAAKG,SCcdP,MAAK,SAAAI,GAAI,OAAI,EAAKnC,SAAS,CAAEmC,cAjBpC,oBAoBE,WAAU,IAAD,OACCA,EAASjC,KAAKtB,MAAduD,KAER,OAAIA,EAEA,yBAAKrB,UAAU,eACb,wBAAIA,UAAU,sBACZ,uDAAyBqB,EAAKb,MAEhC,wBAAIR,UAAU,qBAAqBqB,EAAKrC,MACxC,uBAAGgB,UAAU,sBAAsBqB,EAAKI,OACxC,uBAAGzB,UAAU,sBAAsBqB,EAAKK,OACxC,4BACEzB,KAAK,SACLD,UAAU,YACVO,QAAS,kBAAM,EAAKlB,MAAMsC,UAH5B,UAWC,mBA3CX,GAAiCd,aCgDlBe,E,4MA9Cb9D,MAAQ,CACNM,MAAO,GACPO,eAAgB,G,EAQlBF,aAAe,SAACmC,GACd,EAAK1B,SAAS,CAAEP,eAAgBiC,K,EAGlCe,MAAQ,WACN,EAAKzC,SAAS,CAAEP,eAAgB,K,uDAVlC,WAAqB,IAAD,OFRQmC,EAAQ,UACnCG,MAAK,SAAA7C,GAAK,OAAIA,EAAMoD,QEShBP,MAAK,SAAA7C,GAAK,OAAI,EAAKc,SAAS,CAAEd,e,oBAWnC,WAAU,IAAD,OACP,EAAkCgB,KAAKtB,MAA/BM,EAAR,EAAQA,MAAOO,EAAf,EAAeA,eAEf,OACE,yBAAKqB,UAAU,OACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACE5B,MAAOA,EACPK,aAAc,SAAAmC,GAAM,OAAI,EAAKnC,aAAamC,IAC1CjC,eAAgBA,KAIpB,yBAAKqB,UAAU,gBACb,yBAAKA,UAAU,0BACZrB,EACC,kBAAC,EAAD,CACEiC,OAAQjC,EACRgD,MAAO,kBAAM,EAAKA,WAElB,0B,GAvCEE,IAAMhB,WCHxBiB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.bf7807f4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\nimport classNames from 'classnames';\n\nconst options = ['all', 'active', 'completed'];\n\nexport class TodoList extends Component {\n  state = {\n    search: '',\n    typeFilter: 'all',\n    isShuffle: false,\n  };\n\n  static = {\n    propTypes: {\n      todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n      userSelected: PropTypes.func.isRequired,\n      selectedUserId: PropTypes.number.isRequired,\n    },\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({ [name]: value });\n  }\n\n  handleRandomize = () => {\n    this.setState(state => ({ isShuffle: !state.isShuffle }));\n  }\n\n  render() {\n    const { todos, userSelected, selectedUserId } = this.props;\n    const { search, typeFilter, isShuffle } = this.state;\n    let visibleTodos = [...todos];\n\n    visibleTodos = todos.filter(todo => (\n      // eslint-disable-next-line no-nested-ternary\n      (typeFilter === 'active')\n        ? !todo.completed\n        : (typeFilter === 'completed')\n          ? todo.completed\n          : todo\n    ));\n\n    if (isShuffle) {\n      visibleTodos.sort(() => Math.random() - 0.5);\n    }\n\n    visibleTodos = visibleTodos.filter(\n      todo => todo.title.toLowerCase().includes(search.toLowerCase()),\n    );\n\n    return (\n      <div className=\"TodoList\">\n        <form className=\"search-form\">\n          <input\n            name=\"search\"\n            type=\"text\"\n            className=\"search-form__input\"\n            placeholder=\"Search...\"\n            value={search}\n            onChange={this.handleChange}\n          />\n\n          <select\n            name=\"typeFilter\"\n            className=\"search-form__select\"\n            value={typeFilter}\n            onChange={this.handleChange}\n          >\n            {options.map(option => (\n              <option\n                key={option}\n                value={option}\n              >\n                {option}\n              </option>\n            ))}\n          </select>\n\n          <button\n            type=\"button\"\n            className=\"my-button\"\n            onClick={this.handleRandomize}\n          >\n            Randomize\n          </button>\n\n        </form>\n\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {visibleTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={classNames('TodoList__item', {\n                  'TodoList__item--checked': todo.completed,\n                  'TodoList__item--unchecked': !todo.completed,\n                })}\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={todo.completed}\n                    readOnly\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  type=\"button\"\n                  className={classNames(\n                    'TodoList__user-button',\n                    'button',\n                    {\n                      'TodoList__user-button--selected':\n                      todo.userId === selectedUserId,\n                    },\n                  )}\n                  onClick={() => userSelected(todo.userId)}\n                >\n                  {`User #${todo.userId}`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nconst request = url => fetch(`${BASE_URL}${url}`)\n  .then(response => response.json());\n\nexport const getTodos = () => request('/todos')\n  .then(todos => todos.data);\n\nexport const getUser = userId => request(`/users/${userId}`)\n  .then(user => user.data);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './CurrentUser.scss';\nimport { getUser } from '../../api';\n\nexport class CurrentUser extends Component {\n  state = {\n    user: '',\n  };\n\n  componentDidMount() {\n    this.loadUser();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadUser();\n    }\n  }\n\n  loadUser() {\n    getUser(this.props.userId)\n      .then(user => this.setState({ user }));\n  }\n\n  render() {\n    const { user } = this.state;\n\n    if (user) {\n      return (\n        <div className=\"CurrentUser\">\n          <h2 className=\"CurrentUser__title\">\n            <span>{`Selected user: ${user.id}`}</span>\n          </h2>\n          <h3 className=\"CurrentUser__name\">{user.name}</h3>\n          <p className=\"CurrentUser__email\">{user.email}</p>\n          <p className=\"CurrentUser__phone\">{user.phone}</p>\n          <button\n            type=\"button\"\n            className=\"my-button\"\n            onClick={() => this.props.clear()}\n          >\n            Clear\n          </button>\n        </div>\n      );\n    }\n\n    return 'User go home';\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clear: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then(todos => this.setState({ todos }));\n  }\n\n  userSelected = (userId) => {\n    this.setState({ selectedUserId: userId });\n  }\n\n  clear = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            userSelected={userId => this.userSelected(userId)}\n            selectedUserId={selectedUserId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clear={() => this.clear()}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}